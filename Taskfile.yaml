---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

set: [pipefail]
shopt: [globstar]

includes:
  git: .taskfiles/git
  helm: .taskfiles/helm
  validate: .taskfiles/validate

tasks:
  default: task --list

  clean:
    desc: Clean task cache to force re-running of all cached tasks
    summary: |
      Removes the .task-cache directory which contains checksum files
      used by Task to determine if tasks need to be re-run. Use this
      to force all validation tasks to run again regardless of file changes.
    silent: true
    cmd: rm -rf .task-cache

  new-chart:
    desc: Scaffold a new chart by copying charts/media/sonarr
    summary: |
      Interactively prompts for chart details (name, image repo/tag, description,
      port, icon, group, iconColor, etc.) and creates a new chart under charts/media/.
      Also updates cluster/templates/media.yaml ApplicationSet with the new application.
    silent: true
    cmds:
      - bash scripts/scaffold-new-chart.sh

  vpa-report:
    desc: Generate VPA Goldilocks resource recommendation report
    summary: |
      Fetches VPA (Vertical Pod Autoscaler) recommendations from the cluster
      and generates a comprehensive report. Supports multiple output formats:
      console (default), json, yaml, markdown, and kubectl patch commands.

      Options:
        FORMAT: Output format (console, json, yaml, markdown, kubectl) [default: console]
        OUTPUT: Output file path (required for non-console formats)
        NAMESPACE: Specific namespace to analyze (optional)

      Examples:
        task vpa-report                                    # Console output
        task vpa-report FORMAT=markdown OUTPUT=report.md  # Markdown report
        task vpa-report FORMAT=kubectl OUTPUT=patches.sh  # kubectl commands
        task vpa-report NAMESPACE=media                    # Specific namespace
    vars:
      FORMAT: '{{.FORMAT | default "console"}}'
      OUTPUT: '{{.OUTPUT}}'
      NAMESPACE: '{{.NAMESPACE}}'
    cmds:
      - |
        ARGS="--format {{.FORMAT}}"
        {{if .OUTPUT}}ARGS="$ARGS --output {{.OUTPUT}}"{{end}}
        {{if .NAMESPACE}}ARGS="$ARGS --namespace {{.NAMESPACE}}"{{end}}
        python3 scripts/vpa-goldilocks-reporter.py $ARGS
