app-template:
  securityContext:
    privileged: true
  controllers:
    ultrafeeder:
      type: statefulset
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        kasten/backup: "true"
        app: adsb
        version: 1.0.0
      containers:
        ultrafeeder:
          securityContext:
            privileged: true
          image:
            repository: ghcr.io/sdr-enthusiasts/docker-adsb-ultrafeeder
            tag: latest
            pullPolicy: Always
          env:
            LOGLEVEL: error
            TZ: America/New_York
            HTTP_PORT: '8080'
            READSB_DEVICE_TYPE: rtlsdr
            READSB_RTLSDR_DEVICE: '1090'
            READSB_RTLSDR_PPM: '39'
            READSB_LAT: '35'
            READSB_LON: '70'
            READSB_ALT: 42m
            READSB_GAIN: 'autogain'
            READSB_RX_LOCATION_ACCURACY: '2'
            READSB_STATS_RANGE: 'true'
            ULTRAFEEDER_CONFIG: |
              adsb,dump978,30978,uat_in;
            # adsb,feed.adsb.fi,30004,beast_reduce_plus_out;
            # adsb,in.adsb.lol,30004,beast_reduce_plus_out;
            # adsb,feed.airplanes.live,30004,beast_reduce_plus_out;
            # adsb,feed.planespotters.net,30004,beast_reduce_plus_out;
            # adsb,feed.theairtraffic.com,30004,beast_reduce_plus_out;
            # adsb,data.avdelphi.com,24999,beast_reduce_plus_out;
            # adsb,skyfeed.hpradar.com,30004,beast_reduce_plus_out;
            # adsb,feed.radarplane.com,30001,beast_reduce_plus_out;
            # adsb,dati.flyitalyadsb.com,4905,beast_reduce_plus_out;
            # adsb,feed1.adsbexchange.com,30004,beast_reduce_plus_out;
            # mlat,feed.adsb.fi,31090,39000;
            # mlat,in.adsb.lol,31090,39001;
            # mlat,feed.airplanes.live,31090,39002;
            # mlat,mlat.planespotters.net,31090,39003;
            # mlat,feed.theairtraffic.com,31090,39004;
            # mlat,skyfeed.hpradar.com,31090,39005;
            # mlat,feed.radarplane.com,31090,39006;
            # mlat,dati.flyitalyadsb.com,30100,39007;
            # mlat,feed.adsbexchange.com,31090,39008;
            # mlathub,piaware,30105,beast_in;
            # mlathub,rbfeeder,30105,beast_in;
            # mlathub,radarvirtuel,30105,beast_in;
            # mlathub,planewatch,30105,beast_in;
            UUID: 'ULTRAFEEDER_UUID'
            MLAT_USER: 'FEEDER_NAME'
            READSB_FORWARD_MLAT_SBS: 'true'
            UPDATE_TAR1090: 'true'
            TAR1090_DEFAULTCENTERLAT: '35'
            TAR1090_DEFAULTCENTERLON: '70'
            TAR1090_MESSAGERATEINTITLE: 'true'
            TAR1090_PAGETITLE: 'FEEDER_NAME'
            TAR1090_PLANECOUNTINTITLE: 'true'
            TAR1090_ENABLE_AC_DB: 'true'
            TAR1090_FLIGHTAWARELINKS: 'true'
            HEYWHATSTHAT_PANORAMA_ID: 'FEEDER_HEYWHATSTHAT_ID'
            HEYWHATSTHAT_ALTS: 'FEEDER_HEYWHATSTHAT_ALTS'
            TAR1090_SITESHOW: 'true'
            TAR1090_RANGE_OUTLINE_COLORED_BY_ALTITUDE: 'true'
            TAR1090_RANGE_OUTLINE_WIDTH: '2.0'
            TAR1090_RANGERINGSDISTANCES: '50,100,150,200'
            TAR1090_RANGERINGSCOLORS: "'#1A237E','#0D47A1','#42A5F5','#64B5F6'"
            TAR1090_USEROUTEAPI: 'true'
            GRAPHS1090_DARKMODE: 'true'
          resources:
            requests:
               squat.ai/adsb1090: '1'
            limits:
               squat.ai/adsb1090: '1'

    dump978:
      type: statefulset
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        kasten/backup: "true"
        app: adsb
        version: 1.0.0
      containers:
        dump978:
          securityContext:
            privileged: true
            allowPrivilegeEscalation: true
            runAsUser: 0
            runAsGroup: 0
          image:
            repository: ghcr.io/ullbergm/docker-dump978
            tag: 2
            pullPolicy: Always
          env:
            TZ: America/New_York
            LAT: '35'
            LON: '70'
            HTTP_PORT: '8080'
            READSB_DEVICE_TYPE: rtlsdr
            DUMP978_SDR_GAIN: 'autogain'
            DUMP978_SDR_PPM: '14'
          resources:
            requests:
               squat.ai/adsb978: '1'
            limits:
               squat.ai/adsb978: '1'

    planewatch:
      type: statefulset
      strategy: RollingUpdate
      annotations:
        reloader.stakater.com/auto: "true"
      labels:
        kasten/backup: "true"
        app: adsb
        version: 1.0.0
      containers:
        planewatch:
          securityContext:
            privileged: true
          image:
            # renovate: docker-image versioning=loose
            repository: ghcr.io/plane-watch/docker-plane-watch
            tag: v0.0.4
            pullPolicy: Always
          env:
            BEASTHOST: 'ultrafeeder'
            LAT: '35'
            LONG: '70'
            ALT: '38m'
            TZ: America/New_York
            API_KEY: 'APIKEY'

    # flightaware:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     flightaware:
    #       securityContext:
    #         privileged: true
    #       image:
    #         # renovate: docker-image versioning=loose
    #         repository: ghcr.io/sdr-enthusiasts/docker-piaware
    #         tag: v9.0.1
    #         pullPolicy: Always

    # flightradar24:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     flightradar24:
    #       securityContext:
    #         privileged: true
    #       image:
    #         # renovate: docker-image versioning=loose
    #         repository: ghcr.io/sdr-enthusiasts/docker-flightradar24
    #         tag: 1.0.48-0
    #         pullPolicy: Always

    # radarbox:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     radarbox:
    #       securityContext:
    #         privileged: true
    #       image:
    #         # renovate: docker-image versioning=loose
    #         repository: ghcr.io/sdr-enthusiasts/docker-radarbox
    #         tag: v1.0.10-20231120150000
    #         pullPolicy: Always

    # adsbhub:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     adsbhub:
    #       securityContext:
    #         privileged: true
    #       image:
    #         # renovate: docker-image versioning=loose
    #         repository: ghcr.io/sdr-enthusiasts/docker-adsbhub
    #         tag: 1.06
    #         pullPolicy: Always

    # opensky:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     opensky:
    #       securityContext:
    #         privileged: true
    #       image:
    #         # renovate: docker-image versioning=loose
    #         repository: ghcr.io/sdr-enthusiasts/docker-opensky-network
    #         tag: 2.1.7-1
    #         pullPolicy: Always

    # radarvirtuel:
    #   type: statefulset
    #   strategy: RollingUpdate
    #   annotations:
    #     reloader.stakater.com/auto: "true"
    #   labels:
    #     kasten/backup: "true"
    #     app: adsb
    #     version: 1.0.0
    #   containers:
    #     radarvirtuel:
    #       securityContext:
    #         privileged: true
    #       image:
    #         repository:  ghcr.io/sdr-enthusiasts/docker-radarvirtuel
    #         tag: latest
    #         pullPolicy: Always

  serviceAccount:
    name: adsb-sa

  defaultPodOptions:
    securityContext:
      runAsUser: 0
      runAsGroup: 0
      fsGroup: 0
    # nodeSelector:
    #   nesdr.feature.node.kubernetes.io/rtlamr: "true"


  service:
    ultrafeeder:
      controller: ultrafeeder
      ports:
        http:
          port: 80
        raw-input:
          port: 30001
        raw-output:
          port: 30002
        sbs-input:
          port: 30003
        sbs-output:
          port: 32006
        beast-input:
          port: 30004
        beast-input2:
          port: 30104
        beast-output:
          port: 30005
        beast-reduce-output:
          port: 30006
        json-output:
          port: 30047
        mlat-sbs-output:
          port: 31003
        mlat-beast-input:
          port: 31004
        mlat-beast-output:
          port: 31005
        mlat-beast-reduce-output:
          port: 31006
        prometheus:
          port: 9273
        telegraf:
          port: 9274