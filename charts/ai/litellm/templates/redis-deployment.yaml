apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  labels:
    app.kubernetes.io/name: {{ .Release.Name }}-redis
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/component: redis
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: redis
  template:
    metadata:
      labels:
        service: redis
    spec:
      automountServiceAccountToken: false
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        runAsNonRoot: true
        fsGroup: 999
      containers:
      - name: redis
        image: {{ .Values.pods.redis.image.repository }}:{{ .Values.pods.redis.image.tag }}
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        resources:
          requests:
            cpu: {{ .Values.pods.redis.resources.requests.cpu }}
            memory: {{ .Values.pods.redis.resources.requests.memory }}
          limits:
            cpu: {{ .Values.pods.redis.resources.limits.cpu }}
            memory: {{ .Values.pods.redis.resources.limits.memory }}
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis/redis.conf
          subPath: redis.conf
        command:
        - redis-server
        - /usr/local/etc/redis/redis.conf
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 1
          failureThreshold: 3
      volumes:
      - name: redis-data
        emptyDir: {}
      - name: redis-config
        configMap:
          name: {{ .Release.Name }}-redis-config
